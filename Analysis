{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO8tx4dObCq2lVMIn5hyJlZ"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "**Importação** de bibliotecas\n"
      ],
      "metadata": {
        "id": "bGJFs0NTTjuv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import re\n",
        "import nltk\n",
        "from nltk.tokenize import word_tokenize\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.stem import RSLPStemmer\n",
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "c2XdND2aZnev"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Redução da granularidade dos sentimentos:**"
      ],
      "metadata": {
        "id": "xn3qBqnbTmpr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Carregue o corpus\n",
        "corpus_textos = []\n",
        "corpus_rotulos = []\n",
        "\n",
        "with open(\"analise-sentimentos-2000-noticias.txt\", \"r\", encoding=\"utf-8-sig\") as f:\n",
        "    for linha in f:\n",
        "        rotulo, texto = linha.strip().split(\";;\")\n",
        "        rotulo = mapeamento_emocoes.get(rotulo.lower(), None)  # Verifica se o rótulo está presente no dicionário\n",
        "        if rotulo is not None:  # Se o rótulo estiver presente, adiciona ao corpus\n",
        "            corpus_textos.append(texto)\n",
        "            corpus_rotulos.append(rotulo)\n"
      ],
      "metadata": {
        "id": "gLn7ywuaZxzu"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Configuração dos parâmetros de extração de atributos:**"
      ],
      "metadata": {
        "id": "63WmIRysbfgF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Vetorização dos textos\n",
        "vectorizer = CountVectorizer()\n",
        "X = vectorizer.fit_transform(corpus_textos)\n",
        "\n",
        "# Divisão dos dados em conjuntos de treinamento e teste\n",
        "X_treino, X_teste, y_treino, y_teste = train_test_split(X, corpus_rotulos, test_size=0.2, random_state=42)\n",
        "\n",
        "# Treinamento do modelo SVM\n",
        "svm = SVC(kernel='linear')\n",
        "svm.fit(X_treino, y_treino)\n",
        "\n",
        "# Avaliação do modelo\n",
        "previsoes = svm.predict(X_teste)\n",
        "acuracia = accuracy_score(y_teste, previsoes)\n",
        "print(\"Perfeição do modelo SVM:\", acuracia)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sySFgd43aNcn",
        "outputId": "e205a010-21ef-40ab-caea-774acdba1c7f"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Acurácia do modelo SVM: 0.74\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Vetorização dos textos usando CountVectorizer**:"
      ],
      "metadata": {
        "id": "UAlHaW2tbqlb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Vetorização dos textos usando CountVectorizer com n-grams\n",
        "vectorizer = CountVectorizer(ngram_range=(1, 2))\n",
        "X = vectorizer.fit_transform(corpus_textos)\n"
      ],
      "metadata": {
        "id": "s6U_QadRbAuM"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Utilizando outro classificador de texto:**\n",
        "\n",
        "---\n",
        "\n"
      ],
      "metadata": {
        "id": "ku0B0ErHbuAf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.naive_bayes import MultinomialNB\n",
        "\n",
        "# Treinamento do modelo Naive Bayes Multinomial\n",
        "nb_classifier = MultinomialNB()\n",
        "nb_classifier.fit(X_treino, y_treino)\n",
        "\n",
        "# Avaliação do modelo\n",
        "previsoes_nb = nb_classifier.predict(X_teste)\n",
        "acuracia_nb = accuracy_score(y_teste, previsoes_nb)\n",
        "print(\"Perfeição do modelo Naive Bayes:\", acuracia_nb)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AewBAQ28bB2V",
        "outputId": "37492a34-60ab-4dee-962e-68ede1da0719"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Acurácia do modelo Naive Bayes Multinomial: 0.7885714285714286\n"
          ]
        }
      ]
    }
  ]
}